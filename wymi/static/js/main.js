// Generated by CoffeeScript 1.2.1-pre
(function() {
  var Facility, Router, data;

  data = [
    {
      "address": "6119 E 11TH ST E TULSA, OK 74112",
      "city": "Tulsa",
      "id": "207",
      "latest_score": 100,
      "latitude": "36.14790800",
      "longitude": "-95.90880800",
      "name": "11TH STREET PUB",
      "resource_uri": "/api/v1/facility/208/",
      "state": "OK",
      "type": "Bar",
      "zip_code": "747"
    }, {
      "address": "6119 E 11TH ST E TULSA, OK 74112",
      "city": "Tulsa",
      "id": "208",
      "latest_score": 70,
      "latitude": "36.14790800",
      "longitude": "-95.90880800",
      "name": "11TH STREET PUB",
      "resource_uri": "/api/v1/facility/208/",
      "state": "OK",
      "type": "Bar",
      "zip_code": "456"
    }, {
      "address": "6119 E 11TH ST E TULSA, OK 74112",
      "city": "Tulsa",
      "id": "209",
      "latest_score": 20,
      "latitude": "36.14790800",
      "longitude": "-95.90880800",
      "name": "11TH STREET PUB",
      "resource_uri": "/api/v1/facility/208/",
      "state": "OK",
      "type": "Bar",
      "zip_code": "583"
    }
  ];

  window.wymi = {};

  Facility = {
    Views: {},
    Model: null,
    Collection: null
  };

  Facility.Views.ListItem = Backbone.View.extend({
    tagName: 'li',
    template: '#facilityListItem',
    serialize: function() {
      return {
        fac: this.model.toJSON(),
        display_address: true
      };
    }
  });

  Facility.Views.List = Backbone.View.extend({
    template: '#facilityList',
    className: "facility-wrapper",
    events: {
      "click .refresh": "refreshLocation"
    },
    initialize: function() {
      this.collection.bind('add', function() {
        return this.render();
      }, this);
      this.collection.bind('reset', function() {
        return this.render();
      }, this);
      this.collection.bind('all', function() {
        return this.render();
      }, this);
      this.refreshLocation();
    },
    render: function(layout) {
      var view;
      view = layout(this);
      this.addAll(view);
      return view.render({
        count: this.collection.length
      });
    },
    addOne: function(view) {
      return function(facility) {
        console.log("adding " + (facility.get('name')));
        return view.insert('.facility-list', new Facility.Views.ListItem({
          model: facility
        }));
      };
    },
    addAll: function(view) {
      return this.collection.each(this.addOne(view));
    },
    refreshLocation: function() {
      var _this = this;
      if (navigator.geolocation) {
        return navigator.geolocation.getCurrentPosition(function(pos) {
          return _this.collection.fetch({
            data: {
              lat: pos.coords.latitude,
              lon: pos.coords.longitude
            }
          });
        });
      }
    }
  });

  Facility.Views.Detail = Backbone.View.extend({
    tagName: 'div',
    className: "facility-detail-wrapper well",
    template: '#facilityDetail',
    serialize: function() {
      return {
        fac: this.model.toJSON()
      };
    }
  });

  Facility.Model = Backbone.Model.extend({
    defaults: {
      address: 'nowhere',
      city: 'someplace',
      state: 'Not OK',
      latitude: '',
      longitude: '',
      distance: null,
      name: '',
      type: '',
      latest_score: 50,
      display_address: '',
      "address": '',
      zip_code: ''
    },
    initialize: function() {},
    url: function() {
      return "/api/v1/facility/" + this.id;
    },
    parse: function(res) {
      return res.objects[0];
    }
  });

  Facility.Collection = Backbone.Collection.extend({
    model: Facility.Model,
    url: function() {
      return "/api/v1/facility/";
    },
    parse: function(res) {
      return res.objects;
    }
  });

  Router = Backbone.Router.extend({
    currentLayout: null,
    useLayout: function(name) {
      var currentLayout;
      currentLayout = this.currentLayout;
      if ((currentLayout != null ? currentLayout.options.template : void 0) === name) {
        return currentLayout;
      }
      return this.currentLayout = new Backbone.LayoutManager({
        template: name
      });
    },
    initialize: function() {
      wymi.facilities = new Facility.Collection;
      wymi.facilities.reset(data);
    },
    routes: {
      "": "index",
      "location/:id": "single"
    },
    index: function() {
      var main;
      console.log('index');
      main = this.useLayout('#index');
      main.setViews({
        '.left': new Facility.Views.List({
          collection: wymi.facilities
        })
      });
      return main.render(function(el) {
        return $('#main').html(el);
      });
    },
    single: function(id) {
      var detail, facility;
      console.log('detail view');
      detail = this.useLayout('#detail');
      facility = wymi.facilities.get(id);
      detail.setViews({
        '.left': new Facility.Views.Detail({
          model: facility
        })
      });
      return detail.render(function(el) {
        return $('#main').html(el);
      });
    }
  });

  wymi.router = new Router();

  Backbone.history.start({
    pushState: true
  });

  $('body').delegate('a[data-navigate]', 'click', function(e) {
    var href, protocol;
    console.log('navin');
    href = $(this).attr('href');
    protocol = this.protocol + "//";
    if (href.slice(0, protocol.length) !== protocol) {
      console.log(href);
      e.preventDefault();
      wymi.router.navigate(href, true);
    }
  });

  console.log('starting app');

}).call(this);
